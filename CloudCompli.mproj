<Project DefaultTargets="BuildExtension" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{c87ab655-5939-472b-9ac9-e85dd1175ea3}</ProjectGuid>
    <OutputType>Exe</OutputType>
    <RootNamespace>MyRootNamespace</RootNamespace>
    <AssemblyName>MyAssemblyName</AssemblyName>
    <EnableUnmanagedDebugging>False</EnableUnmanagedDebugging>
    <AllowNativeQuery>False</AllowNativeQuery>
    <AsAction>False</AsAction>
    <FastCombine>False</FastCombine>
    <ClearLog>False</ClearLog>
    <ShowEngineTraces>False</ShowEngineTraces>
    <ShowUserTraces>False</ShowUserTraces>
    <LegacyRedirects>False</LegacyRedirects>
    <SuppressRowErrors>False</SuppressRowErrors>
    <SuppressCellErrors>False</SuppressCellErrors>
    <MaxRows>1000</MaxRows>
    <ExtensionProject>Yes</ExtensionProject>
    <Name>CloudCompli</Name>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>false</DebugSymbols>
    <!--Should be true, fix this when the debugger is implemented -->
    <OutputPath>bin\Debug\</OutputPath>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <OutputPath>bin\Release\</OutputPath>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="mscorlib" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="CloudCompli.pq">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="CloudCompli16.png">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="CloudCompli20.png">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="CloudCompli24.png">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="CloudCompli32.png">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="CloudCompli40.png">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="CloudCompli48.png">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="CloudCompli64.png">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="CloudCompli80.png">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="resources.resx">
      <SubType>Code</SubType>
    </Compile>
    <Content Include="CloudCompli.query.pq">
      <SubType>Code</SubType>
    </Content>
    <Content Include="lib\GetApiResponse.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetApiToken.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetBmps.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetBmpsTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetCaswrcbIndustrialFacilities.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetCaswrcbIndustrialFacilitiesAttribute.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetCaswrcbIndustrialFacilitiesTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetCaswrcbIndustrialFacilities_QueryOptionNames.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetCaswrcbWastewaterFacilityPermitsAttribute.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetCaswrcbWastewaterFacilityPermitsTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetCaswrcbWastewaterFacilityPermits_QueryOptionNames.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetConstituents.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetConstituentsTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetDeficiencyLevels.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetDeficiencyLevelsTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetEducationInteractions.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetEducationInteractionsTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetEnforcementLevels.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetEnforcementLevelsTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetEnforcements.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetEnforcementsTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetFlowMeters.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetFlowMetersTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetFlowRecords.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetFlowRecordsTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetFlowRecords_QueryOptionNames.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetInvestigations.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetInvestigationsTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetLocationTags.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetLocationTagsTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetLocationTags_QueryOptionNames.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetMonitoringLocations.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetMonitoringLocationsTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetMonitoringRecords.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetMonitoringRecordsTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetMonitoringRecords_QueryOptionNames.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetPagedApiResponse.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetPagedApiResponse_OptionNames.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetProgramCurrentBmpIneffectivenessScores.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetProgramCurrentBmpIneffectivenessScoresTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetProgramDeficiencies.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetProgramDeficienciesTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetProgramLocations.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetProgramLocationsTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetReports.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetReportsTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetPrograms.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetProgramsTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetRawApiResponse.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetReportDefinitions.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetReportDefinitionsTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetUsers.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetUsersTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetCaswrcbWastewaterFacilityPermits.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetWeatherHydstraObsStations.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\GetWeatherHydstraObsStationsTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\Record_MapFields.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\Record_SelectFieldsWhereExists.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\Text_FromAny.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\TransformEnforcementsToTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\TransformLocationRecordsToTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\TransformPointColumnToCoordinatesColumns.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\TransformRecordsToTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\TransformReportDefinitionsToTable.pq">
      <SubType>Content</SubType>
    </Content>
    <Content Include="lib\TransformReportsToTable.pq">
      <SubType>Content</SubType>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="lib\" />
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- 
  ReplaceFilesText accepts a Files list, matches the contents of each file on the regex MatchExpression, and replaces it with ReplacementText.
  Regex capture groups allowed within MatchExpression and group substitution allowed within ReplacementText.
  Adapted from: https://github.com/loresoft/msbuildtasks/blob/6196d43e7eb6807f306e9861b286fe61c8bb0993/Source/MSBuild.Community.Tasks/FileUpdate.cs 
  -->
  <UsingTask TaskName="ReplaceFilesText" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <Files ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
      <MatchExpression ParameterType="System.String" Required="true" />
      <ReplacementText ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.Core" />
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs"><![CDATA[
            foreach (ITaskItem item in Files)
            {
                string fileName = item.ItemSpec;
                File.WriteAllText(
                    fileName,
                    Regex.Replace(File.ReadAllText(fileName), MatchExpression, ReplacementText)
                    );
            }
          ]]></Code>
    </Task>
  </UsingTask>
  <UsingTask TaskName="BuildExtension" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll">
    <ParameterGroup>
      <InputDirectory ParameterType="System.String" Required="true" />
      <OutputFile ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.IO.Compression" />
      <Reference Include="System.IO.Compression.FileSystem" />
      <Using Namespace="System.Globalization" />
      <Using Namespace="System.IO.Compression " />
      <Code Type="Fragment" Language="cs"><![CDATA[    
    using(FileStream fileStream = File.Create(OutputFile))
    using(ZipArchive archiveOut = new ZipArchive(fileStream, ZipArchiveMode.Create, false))
    {
        foreach(string fullPath in Directory.EnumerateFiles(InputDirectory))
        {
            string filename = Path.GetFileName(fullPath);
        
            archiveOut.CreateEntryFromFile(fullPath, filename, CompressionLevel.Optimal);
        }
    }
]]></Code>
    </Task>
  </UsingTask>
  <Target Name="BuildExtension" DependsOnTargets="ExtensionClean">
    <ItemGroup>
      <PQFiles Include="@(Compile)" Condition="'%(Extension)' == '.pq'" />
    </ItemGroup>
    <ItemGroup>
      <NonPQFiles Include="@(Compile)" Condition="'%(Extension)' != '.pq'" />
    </ItemGroup>
    <ItemGroup>
      <LibFiles Include="lib\*.pq" />
    </ItemGroup>
    <MakeDir Directories="$(IntermediateOutputPath)" />
    <MakeDir Directories="$(OutputPath)" />
    <Copy SourceFiles="@(NonPQFiles)" DestinationFolder="$(IntermediateOutputPath)" />
    <Copy SourceFiles="@(PQFiles)" DestinationFiles="@(PQFiles->'$(IntermediateOutputPath)%(RecursiveDir)%(FileName).m')" />
    <Copy SourceFiles="@(LibFiles)" DestinationFiles="@(LibFiles->'$(IntermediateOutputPath)%(RecursiveDir)\%(Filename).pqm')" />
    <ItemGroup>
      <IntermediateMFiles Include="$(IntermediateOutputPath)\*.m" />
    </ItemGroup>
    <ItemGroup>
      <IntermediatePQMFiles Include="$(IntermediateOutputPath)\*.pqm" />
    </ItemGroup>
    <!-- Support for the macro "#lib" to define a function that loads a function from a lib file -->
    <ReplaceFilesText Files="@(IntermediateMFiles)" MatchExpression="&quot;#lib&quot;" ReplacementText="(name) =&gt; Expression.Evaluate(Text.FromBinary(Extension.Contents(name &amp; &quot;.pqm&quot;)), #shared)" />
    <ReplaceFilesText Files="@(IntermediatePQMFiles)" MatchExpression="&quot;#lib&quot;" ReplacementText="(name) =&gt; Expression.Evaluate(Text.FromBinary(Extension.Contents(name &amp; &quot;.pqm&quot;)), #shared)" />
    <!-- Support for the macro "#lib(MyFunc)" to define a function that substitutes the function by name lib/MyFunc.pq -->
    <ReplaceFilesText Files="@(IntermediateMFiles)" MatchExpression="&quot;#lib\(([^\)]*)\)&quot;" ReplacementText="((name) =&gt; Expression.Evaluate(Text.FromBinary(Extension.Contents(name &amp; &quot;.pqm&quot;)), #shared))(&quot;$1&quot;)" />
    <ReplaceFilesText Files="@(IntermediatePQMFiles)" MatchExpression="&quot;#lib\(([^\)]*)\)&quot;" ReplacementText="((name) =&gt; Expression.Evaluate(Text.FromBinary(Extension.Contents(name &amp; &quot;.pqm&quot;)), #shared))(&quot;$1&quot;)" />
    <BuildExtension InputDirectory="$(IntermediateOutputPath)" OutputFile="$(OutputPath)\$(ProjectName).mez" />
  </Target>
  <Target Name="ExtensionClean">
    <!-- Remove obj folder -->
    <RemoveDir Directories="$(BaseIntermediateOutputPath)" />
    <!-- Remove bin folder -->
    <RemoveDir Directories="$(OutputPath)" />
  </Target>
</Project>